{"filter":false,"title":"hangman.rb","tooltip":"/first_programs/hangman.rb","undoManager":{"mark":0,"position":0,"stack":[[{"start":{"row":0,"column":0},"end":{"row":20,"column":22},"action":"insert","lines":["# Write a program hangman.rb that contains a function called hangman.  ","# The function's parameters are a word and an array of letters.  ","# It returns a string showing the letters that have been guessed.  ","# Call the function from within your program so that you know that it works.","# Example: hangman(\"bob\",[\"b\"]) should evaluate to \"b_b\"","# Example: hangman(\"alphabet\",[\"a\",\"h\"]) should return \"a__ha___\"","","def hangman(x, arr)","\tnew_arr = []","\tx.each_char do |a|","\t\tarr.each do |b|","\t\t\ta == b ? new_arr << a : new_arr << \"_\"","\t\tend","\tend","\treturn new_arr.join","end","","test1 = hangman(\"bob\", [\"b\"])","test2 = hangman(\"alphabet\", [\"a\", \"h\"])","puts test1  #\"b_b\"","puts test2\t#\"a__ha___\""],"id":1}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":20,"column":22},"end":{"row":20,"column":22},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":39,"mode":"ace/mode/ruby"}},"timestamp":1575940743445,"hash":"0c9c57b40b77341bb2fe1eaa42f7ab74d0450926"}